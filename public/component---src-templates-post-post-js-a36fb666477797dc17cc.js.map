{"version":3,"sources":["webpack:///./src/templates/post/heading/heading.js","webpack:///./src/templates/post/article-heading/article-heading.js","webpack:///./src/templates/post/article/article.js","webpack:///./src/templates/post/comments/comments.js","webpack:///./src/templates/post/share/share.js","webpack:///./src/templates/post/suggested-posts/suggested-posts.js","webpack:///./src/templates/post/post.js","webpack:///./config.js","webpack:///./src/utils.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout/header/header.js","webpack:///./src/components/layout/footer/footer.js","webpack:///./src/components/layout/layout.js","webpack:///./src/components/layout/index.js","webpack:///./src/components/seo/seo.js","webpack:///./src/components/seo/index.js","webpack:///./src/components/tag-list/tag-list.js","webpack:///./src/components/tag-list/index.js","webpack:///./src/components/post-list/post-list.js","webpack:///./src/components/post-list/index.js"],"names":["Heading","_ref","title","tags","cover","coverTitle","react_default","a","createElement","className","style","header","tag_list","propTypes","PropTypes","string","isRequired","arrayOf","object","ArticleHeading","excerpt","date","time","translations","container","index_esm","md_index_esm","sort","translationA","translationB","hreflang","map","_ref2","index","path","key","gatsby_browser_entry","to","hreflangMap","length","number","shape","en","it","fr","Article","html","dangerouslySetInnerHTML","__html","Comments","render","id","componentDidMount","d","s","_this$props","this","props","pageCanonicalUrl","pageId","window","DISQUS","reset","reload","config","page","url","identifier","disqus_config","document","src","Config","disqusScript","setAttribute","Date","head","body","appendChild","React","Component","Share","description","coverUrl","esm","Provider","value","icon","FacebookShareButton","color","TwitterShareButton","LinkedinShareButton","PinterestShareButton","media","TumblrShareButton","caption","RedditShareButton","WhatsappShareButton","separator","EmailShareButton","subject","SuggestedPosts","posts","post_list","edge","node","__webpack_require__","__webpack_exports__","pageQuery","Post","data","pageContext","_data$markdownRemark","markdownRemark","frontmatter","timeToRead","img","childImageSharp","fluid","canonicalUrl","Utils","resolvePageUrl","siteUrl","pathPrefix","resolveUrl","suggestedPosts","getSuggestedPosts","allMarkdownRemark","layout","seo","contentType","imageUrl","keywords","heading","content","article_heading","article","share","suggested_posts","comments","module","exports","siteTitle","siteDescription","author","postsForArchivePage","defaultLanguage","pages","home","blog","about","tag","archive","social","github","linkedin","rss","go","name","require","_len","arguments","paths","Array","_key","reduce","resolvedUrl","urlPath","toString","trim","replace","apply","post","postList","limit","getTagScore","commonTags","forEach","indexOf","edges","edgeA","edgeB","slice","getRelatedTranslations","filter","fileAbsolutePath","split","lang","capitalize","str","toUpperCase","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","func","m","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","Header","_this","_Component","call","state","fixedHeader","backgroundImage","titleContainer","hiddenDescription","visibleDescription","menuButton","collapsedMenu","size","onClick","toggleMenu","list","expandedMenu","join","target","rel","href","lastScrollY","toggleFixedHeader","bind","assertThisInitialized_default","addEventListener","componentWillUnmount","removeEventListener","_this2","animationInProgress","setTimeout","setState","scrollY","Footer","Layout","Fragment","footer","defaultProps","SEO","meta","detailsQuery","metaKeywords","pageUrl","metaImageUrl","file","fixed","Helmet_default","titleTemplate","property","concat","link","obj","_1166109120","oneOf","TagList","PostList","_post$node$frontmatte"],"mappings":"2LAQMA,EAAU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,KAAVF,EAAgBG,MAAhBH,EAAuBI,WAAvB,OACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMC,QACpBL,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMR,OACpBI,EAAAC,EAAAC,cAAA,UAAKN,GACLI,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAST,KAAMA,KAEjBG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMN,UAM1BJ,EAAQa,UAAY,CAClBX,MAAOY,IAAUC,OAAOC,WACxBb,KAAMW,IAAUG,QAAQH,IAAUC,QAAQC,WAC1CZ,MAAOU,IAAUI,OAAOF,WACxBX,WAAYS,IAAUC,QAGTf,8DClBTmB,EAAiB,SAAAlB,GAAA,IAAGmB,EAAHnB,EAAGmB,QAASC,EAAZpB,EAAYoB,KAAMC,EAAlBrB,EAAkBqB,KAAMC,EAAxBtB,EAAwBsB,aAAxB,OACrBjB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMc,WACpBlB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMU,SACpBd,EAAAC,EAAAC,cAAA,SAAIY,IAENd,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,MADF,SAC6B,KAE7BnB,EAAAC,EAAAC,cAAA,YAAOa,IAETf,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,MADF,iBAC+B,KAE/BnB,EAAAC,EAAAC,cAAA,YAAOc,EAAP,MAEDC,EACCjB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,MADF,kBACiC,KAEhCH,EACEI,KAAK,SAACC,EAAcC,GAAf,OACJD,EAAaE,SAAWD,EAAaC,UAAY,EAAI,IAEtDC,IAAI,SAAAC,EAAqBC,GAArB,IAAGH,EAAHE,EAAGF,SAAUI,EAAbF,EAAaE,KAAb,OACH5B,EAAAC,EAAAC,cAAA,QAAM2B,IAAKL,GACTxB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAIH,GAAOI,EAAYR,IAC5BG,IAAUV,EAAagB,OAAS,EAAI,KAAO,SAIlD,OAIRpB,EAAeN,UAAY,CACzBO,QAASN,IAAUC,OAAOC,WAC1BK,KAAMP,IAAUC,OAAOC,WACvBM,KAAMR,IAAU0B,OAAOxB,WACvBO,aAAcT,IAAUG,QACtBH,IAAU2B,MAAM,CACdX,SAAUhB,IAAUC,OAAOC,WAC3BkB,KAAMpB,IAAUC,OAAOC,eAM7B,IAAMsB,EAAc,CAClBI,GAAI,UACJC,GAAI,UACJC,GAAI,UAGSzB,sCCzDT0B,EAAU,SAAA5C,GAAA,IAAG6C,EAAH7C,EAAG6C,KAAH,OACdxC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMc,WACpBlB,EAAAC,EAAAC,cAAA,WAASuC,wBAAyB,CAAEC,OAAQF,OAIhDD,EAAQhC,UAAY,CAClBiC,KAAMhC,IAAUC,OAAOC,YAGV6B,4DCXTI,sJA2BJC,OAAS,kBACP5C,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMc,WACpBlB,EAAAC,EAAAC,cAAA,OAAK2C,GAAG,kDA5BZC,kBAAA,WAAoB,IAiBVC,EACFC,EAlBYC,EACmBC,KAAKC,MAAlCC,EADUH,EACVG,iBAAkBC,EADRJ,EACQI,OAEtBC,OAAOC,OACTD,OAAOC,OAAOC,MAAM,CAClBC,QAAQ,EACRC,OAAQ,WACNR,KAAKS,KAAKC,IAAMR,EAChBF,KAAKS,KAAKE,WAAaR,MAI3BC,OAAOQ,cAAgB,WACrBZ,KAAKS,KAAKC,IAAMR,EAChBF,KAAKS,KAAKE,WAAaR,GAGnBN,EAAIgB,UACNf,EAAID,EAAE7C,cAAc,WACpB8D,IAAMC,IAAOC,aACflB,EAAEmB,aAAa,kBAAmB,IAAIC,OACrCrB,EAAEsB,MAAQtB,EAAEuB,MAAMC,YAAYvB,QAtBhBwB,IAAMC,WAkC7B9B,EAASpC,UAAY,CACnB6C,iBAAkB5C,IAAUC,OAAOC,WACnC2C,OAAQ7C,IAAUC,OAAOC,YAGZiC,2GCpBT+B,EAAQ,SAAA/E,GAAA,IAAGyD,EAAHzD,EAAGyD,iBAAkBxD,EAArBD,EAAqBC,MAAO+E,EAA5BhF,EAA4BgF,YAAa9E,EAAzCF,EAAyCE,KAAM+E,EAA/CjF,EAA+CiF,SAA/C,OACZ5E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2E,EAAA,EAAYC,SAAb,CAAsBC,MAAO,CAAE5E,UAAWC,IAAM4E,OAC9ChF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMc,WACpBlB,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAqBrB,IAAKR,GACxBpD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAkB+D,MAAM,aAE1BlF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAoBvB,IAAKR,EAAkBxD,MAAOA,GAChDI,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAiB+D,MAAM,aAEzBlF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACExB,IAAKR,EACLxD,MAAOA,EACP+E,YAAaA,GAEb3E,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAY+D,MAAM,aAEpBlF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACEzB,IAAKR,EACLkC,MAAOV,EACPD,YAAaA,GAEb3E,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAmB+D,MAAM,aAE3BlF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CACE3B,IAAKR,EACLxD,MAAOA,EACPC,KAAMA,EACN2F,QAASb,GAET3E,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAgB+D,MAAM,aAExBlF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAmB7B,IAAKR,EAAkBxD,MAAOA,GAC/CI,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAgB+D,MAAM,aAExBlF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CACE9B,IAAKR,EACLxD,MAAOA,EACP+F,UAAU,OAEV3F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAkB+D,MAAM,aAE1BlF,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAkBhC,IAAKR,EAAkByC,QAASjG,GAChDI,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAkB+D,MAAM,iBAOlCR,EAAMnE,UAAY,CAChB6C,iBAAkB5C,IAAUC,OAAOC,WACnCd,MAAOY,IAAUC,OAAOC,WACxBiE,YAAanE,IAAUC,OAAOC,WAC9Bb,KAAMW,IAAUG,QAAQH,IAAUC,QAAQC,WAC1CkE,SAAUpE,IAAUC,OAAOC,YAGdgE,mCC7EToB,EAAiB,SAAAnG,GAAA,IAAGoG,EAAHpG,EAAGoG,MAAH,OACrB/F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAMR,OAApB,8CACAI,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAUD,MAAOA,MAIrBD,EAAevF,UAAY,CACzBwF,MAAOvF,IAAUG,QACfH,IAAU2B,MAAM,CACd8D,KAAMzF,IAAU2B,MAAM,CACpB+D,KAAM1F,IAAUI,YAGpBF,YAGWoF,+CCxBfK,EAAApD,EAAAqD,EAAA,8BAAAC,KAgBA,IAsDaA,GAAS,aA8CPC,UApGF,SAAA3G,GAA2B,IAAxB4G,EAAwB5G,EAAxB4G,KAAMC,EAAkB7G,EAAlB6G,YAAkBC,EACIF,EAAKG,eAAvClE,EAD8BiE,EAC9BjE,KAAMmE,EADwBF,EACxBE,YAAaC,EADWH,EACXG,WACnBhH,EAA4C+G,EAA5C/G,MAAOmB,EAAqC4F,EAArC5F,KAAMlB,EAA+B8G,EAA/B9G,KAAMC,EAAyB6G,EAAzB7G,MAAO8B,EAAkB+E,EAAlB/E,KAAMd,EAAY6F,EAAZ7F,QAClCG,EACJuF,EAAYvF,aAAagB,OAAS,EAAIuE,EAAYvF,aAAe,KAC7D4F,EAAM/G,EAAMgH,gBAAgBC,MAC5BC,EAAeC,IAAMC,eACzBjD,IAAOkD,QACPlD,IAAOmD,WACPxF,GAEIgD,EAAWqC,IAAMI,WAAWpD,IAAOkD,QAASN,EAAI7C,KAChDsD,EAAiBL,IAAMM,kBAC3BhB,EAAKG,eACLH,EAAKiB,kBACL,GAGF,OACExH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,KACEzH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CACE9H,MAAOA,EACP+E,YAAa7D,EACbc,KAAMA,EACN+F,YAAY,UACZC,SAAUf,EAAI7C,IACd6D,SAAUhI,EACVoB,aAAcA,IAEhBjB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAMc,WACpBlB,EAAAC,EAAAC,cAAC4H,EAAD,CAASlI,MAAOA,EAAOC,KAAMA,EAAMC,MAAO+G,EAAK9G,WAAYe,IAC3Dd,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAM2H,SACpB/H,EAAAC,EAAAC,cAAC8H,EAAD,CACElH,QAASA,EACTC,KAAMA,EACNC,KAAM4F,EACN3F,aAAcA,IAEhBjB,EAAAC,EAAAC,cAAC+H,EAAD,CAASzF,KAAMA,IACfxC,EAAAC,EAAAC,cAACgI,EAAD,CACE9E,iBAAkB4D,EAClBpH,MAAOA,EACP+E,YAAa7D,EACbjB,KAAMA,EACN+E,SAAUA,KAGd5E,EAAAC,EAAAC,cAACiI,EAAD,CAAgBpC,MAAOuB,IACvBtH,EAAAC,EAAAC,cAACkI,EAAD,CAAUhF,iBAAkB4D,EAAc3D,OAAQzD,0BC/D1DyI,EAAOC,QAAU,CACflB,WAAY,UACZD,QAAS,mCACToB,UAAW,SACXC,gBAAiB,0BACjBC,OAAQ,iBACRC,oBAAqB,EACrBC,gBAAiB,KACjBzE,aAAc,6CACd0E,MAAO,CACLC,KAAM,IACNC,KAAM,OACNC,MAAO,QACPC,IAAK,MACLC,QAAS,WAEXC,OAAQ,CACNC,OAAQ,oCACRC,SAAU,GACVC,IAAK,YAEPxJ,KAAM,CACJyJ,GAAI,CACFC,KAAM,SACN5E,YAAa,mFCzBnB,IAAMV,EAASuF,EAAQ,KAEjBvC,EAAQ,CAMZI,WAAY,WAAc,QAAAoC,EAAAC,UAAAzH,OAAV0H,EAAU,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAVF,EAAUE,GAAAH,UAAAG,GACxB,OAAOF,EAAMG,OAAO,SAACC,EAAanI,GAChC,IAAIoI,EAAUpI,EAAKqI,WAAWC,OAI9B,OAHIF,IACFD,IACmB,KAAhBA,EAAqB,GAAK,KAAOC,EAAQG,QAAQ,WAAY,KAC3DJ,GACN,KAQL7C,eAAgB,WAEd,OADkBD,EAAMI,WAAN+C,MAAAnD,EAAKyC,WACF,KASvBnC,kBAAmB,SAAC8C,EAAMC,EAAUC,GAElC,IAAIC,EAAc,SAAAvE,GAChB,IAAIwE,EAAa,EAIjB,OAHAxE,EAAKC,KAAKS,YAAY9G,KAAK6K,QAAQ,SAAA1B,GACjCyB,IAAsD,IAAxCJ,EAAK1D,YAAY9G,KAAK8K,QAAQ3B,GAAc,EAAI,IAEzDyB,GAGT,OAAOH,EAASM,MACbvJ,KAAK,SAACwJ,EAAOC,GACZ,OAAON,EAAYM,GAASN,EAAYK,KAEzCE,MAAM,EAAGR,IAQdS,uBAAwB,SAACX,EAAMC,GAC7B,OAAOA,EACJW,OAAO,SAAAtL,GAEN,OAFoBA,EAAXuG,KAGFgF,iBAAiBC,MAAM,KAAKJ,OAAO,GAAI,GAAG,KAC/CV,EAAKa,iBAAiBC,MAAM,KAAKJ,OAAO,GAAI,GAAG,KAGlDtJ,IAAI,SAAAC,GAAc,IAAXwE,EAAWxE,EAAXwE,KACFkF,EAAOlF,EAAKgF,iBAAiBC,MAAM,KAAKJ,OAAO,GAAI,GAAG,GAC1D,MAAO,CACLvJ,SAA6B,UAAnB4J,EAAKL,OAAO,GAAiBK,EAAOnH,EAAO0E,gBACrD/G,KAAMqF,EAAMC,eAAehB,EAAKS,YAAY/E,UASpDyJ,WAAY,SAAAC,GAAG,OAAIA,EAAI,GAAGC,cAAgBD,EAAIP,MAAM,KAGtD1C,EAAOC,QAAUrB,oCCjFjBd,EAAApD,EAAAqD,EAAA,sBAAAoF,IAAA,IAAAC,EAAAtF,EAAA,GAAAuF,EAAAvF,EAAAwF,EAAAF,GAAAG,EAAAzF,EAAA,GAAA0F,EAAA1F,EAAAwF,EAAAC,GAAAE,EAAA3F,EAAA,IAAA4F,EAAA5F,EAAAwF,EAAAG,GAAA3F,EAAApD,EAAAqD,EAAA,sBAAA2F,EAAA9L,IAAAkG,EAAA,SAaM6F,EAAqBxH,IAAMyH,cAAc,IAEzCT,EAAc,SAAArI,GAAK,OACvBuI,EAAAzL,EAAAC,cAAC8L,EAAmBE,SAApB,KACG,SAAAC,GACC,OACEhJ,EAAMoD,MACL4F,EAAgBhJ,EAAMiJ,QAAUD,EAAgBhJ,EAAMiJ,OAAO7F,MAEtDpD,EAAMP,QAAUO,EAAMkJ,UAC5BlJ,EAAMoD,KAAOpD,EAAMoD,KAAKA,KAAO4F,EAAgBhJ,EAAMiJ,OAAO7F,MAGvDmF,EAAAzL,EAAAC,cAAA,uCA4BfsL,EAAYjL,UAAY,CACtBgG,KAAM/F,IAAUI,OAChBwL,MAAO5L,IAAUC,OAAOC,WACxBkC,OAAQpC,IAAU8L,KAClBD,SAAU7L,IAAU8L,2BC1DtB,IAAsBC,EAKpBlE,EAAOC,SALaiE,EAKW/C,EAAQ,OALR+C,EAAEC,SAAYD,oGCMzCE,EAAmB,SAAA9M,GAAkB,IAAf+M,EAAe/M,EAAf+M,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEnI,IAAMtE,cAAc6M,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBlM,UAAY,CAC3BmM,SAAUlM,IAAU2B,MAAM,CACxB2K,SAAUtM,IAAUC,OAAOC,aAC1BA,YAGU+L,ujBCqGAU,cApHb,SAAAA,IAAc,IAAAC,EAAA,OACZA,EAAAC,EAAAC,KAAApK,aAwCFN,OAAS,kBACP5C,EAAAC,EAAAC,cAAA,OACEC,UAAWC,IAAMc,UACjBd,MAAOgN,EAAKG,MAAMC,YAAc,CAAEC,gBAAiB,QAAW,MAE9DzN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMsN,gBACpB1N,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMR,OACpBI,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAIkF,IAAMC,eAAejD,IAAO2E,MAAMC,OAC1C7I,EAAAC,EAAAC,cAAA,UAAK+D,IAAOsE,WACZvI,EAAAC,EAAAC,cAAA,KACEC,UACEiN,EAAKG,MAAMC,YACPpN,IAAMuN,kBACNvN,IAAMwN,oBAGX3J,IAAOuE,mBAIdxI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMyN,YACnBT,EAAKG,MAAMO,cACV9N,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ4M,KAAK,KAAKC,QAASZ,EAAKa,aAEhCjO,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAS4M,KAAK,KAAKC,QAASZ,EAAKa,eAIvCjO,EAAAC,EAAAC,cAAA,OACEC,UAAW,CACTC,IAAM8N,KACNd,EAAKG,MAAMO,cAAgB1N,IAAM0N,cAAgB1N,IAAM+N,cACvDC,KAAK,MAEPpO,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAIkF,IAAMC,eAAejD,IAAO2E,MAAMC,OAA5C,SAEF7I,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAIkF,IAAMC,eAAejD,IAAO2E,MAAMI,MAA5C,SAEFhJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAIkF,IAAMC,eAAejD,IAAO2E,MAAMG,QAA5C,WAGJ/I,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEmO,OAAO,SACPC,IAAI,+BACJC,KAAMtK,IAAOiF,OAAOC,QAEpBnJ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAU4M,KAAK,SAGnB/N,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEmO,OAAO,SACPC,IAAI,+BACJC,KAAMtK,IAAOiF,OAAOE,UAEpBpJ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAY4M,KAAK,SAGrB/N,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAIkF,IAAMI,WAAWpD,IAAOiF,OAAOG,MACvCrJ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAO4M,KAAK,aAzGtBX,EAAKG,MAAQ,CACXiB,YAAa,EACbhB,aAAa,EACbM,eAAe,GAEjBV,EAAKqB,kBAAoBrB,EAAKqB,kBAAkBC,KAAvBC,IAAAvB,IACzBA,EAAKa,WAAab,EAAKa,WAAWS,KAAhBC,IAAAvB,IARNA,sCAWdtK,kBAAA,WACEQ,OAAOsL,iBAAiB,SAAU1L,KAAKuL,sBAGzCI,qBAAA,WACEvL,OAAOwL,oBAAoB,SAAU5L,KAAKuL,sBAG5CA,kBAAA,WAAoB,IAAAM,EAAA7L,KACbA,KAAKuL,kBAAkBO,sBAC1B9L,KAAKuL,kBAAkBO,qBAAsB,EAC7CC,WAAW,WACTF,EAAKG,SACH,CACEV,YAAalL,OAAO6L,QACpB3B,YACElK,OAAO6L,QAAU,KAAOJ,EAAKxB,MAAMiB,YAAclL,OAAO6L,SAE5D,kBAAOJ,EAAKN,kBAAkBO,qBAAsB,KAErD,SAIPf,WAAA,WACE/K,KAAKgM,SAAS,CACZpB,eAAgB5K,KAAKqK,MAAMO,oBAtCZrJ,+BCEN2K,EANA,kBACbpP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMc,WACpBlB,EAAAC,EAAAC,cAAA,uECEEmP,EAAS,SAAA1P,GAAA,IAAG0M,EAAH1M,EAAG0M,SAAUzM,EAAbD,EAAaC,MAAb,OACbI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqP,SAAA,KACEtP,EAAAC,EAAAC,cAACG,EAAD,MACAL,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMc,WACnBtB,EACCI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMR,OACpBI,EAAAC,EAAAC,cAAA,UAAKN,IAEL,KACHyM,GAEHrM,EAAAC,EAAAC,cAACqP,EAAD,QAIJF,EAAO9O,UAAY,CACjB8L,SAAU7L,IAAU0F,KAAKxF,WACzBd,MAAOY,IAAUC,QAGnB4O,EAAOG,aAAe,CACpB5P,MAAO,IAGMyP,QCjCflJ,EAAApD,EAAAqD,EAAA,sBAAAqB,yJCSA,SAASgI,EAAT9P,GAUG,IATDC,EASCD,EATDC,MACA+E,EAQChF,EARDgF,YACA/C,EAOCjC,EAPDiC,KACAwJ,EAMCzL,EANDyL,KACAvD,EAKClI,EALDkI,SACAF,EAIChI,EAJDgI,YACAC,EAGCjI,EAHDiI,SACA3G,EAECtB,EAFDsB,aACAyO,EACC/P,EADD+P,KAEA,OACE1P,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEsK,MAAOuD,EACP/M,OAAQ,SAAA2D,GACN,IAAMqJ,EACJ/H,GAAYA,EAAS5F,OAAS,EAC1B,CAAEsH,KAAM,WAAYxB,QAASF,EAASuG,KAAK,OAC3C,GACAyB,EAAU5I,IAAMC,eACpBjD,IAAOkD,QACPlD,IAAOmD,WACPxF,GAEIkO,EAAe7I,IAAMI,WACzBpD,IAAOkD,QACPS,GAAsBrB,EAAKwJ,KAAKjJ,gBAAgBkJ,MAAMhM,KAGxD,OACEhE,EAAAC,EAAAC,cAAC+P,EAAAhQ,EAAD,CACEL,MAAOA,EACPsQ,cAAa,QAAUjM,IAAOsE,UAC9BmH,KACE,CACE,CAAEnG,KAAM,cAAexB,QAASpD,GAEhC,CAAEwL,SAAU,WAAYpI,QAASnI,GACjC,CAAEuQ,SAAU,UAAWpI,QAASJ,GAAe,WAC/C,CAAEwI,SAAU,SAAUpI,QAAS8H,GAC/B,CAAEM,SAAU,iBAAkBpI,QAASpD,GACvC,CAAEwL,SAAU,WAAYpI,QAAS+H,GACjC,CAAEK,SAAU,eAAgBpI,QAASpD,GACrC,CAAEwL,SAAU,eAAgBpI,QAAS9D,IAAOsE,WAC5C,CAAE4H,SAAU,YAAapI,QAASqD,GAAQ,SAE1C,CAAE7B,KAAM,eAAgBxB,QAAS,uBACjC,CAAEwB,KAAM,gBAAiBxB,QAASnI,GAClC,CAAE2J,KAAM,sBAAuBxB,QAASpD,GACxC,CAAE4E,KAAM,gBAAiBxB,QAAS+H,GAClC,CAAEvG,KAAM,oBAAqBxB,QAASpD,GACtC,CAAE4E,KAAM,eAAgBxB,QAAS9D,IAAOwE,QACxC,CAAEc,KAAM,kBAAmBxB,QAAS9D,IAAOwE,SAE1C2H,OAAOR,GACPQ,OAAOV,GAAQ,IAEpBW,KAAM,CACJ,CAAE/B,IAAK,YAAaC,KAAMsB,IAGzBO,OACCnP,EACIA,EAAaQ,IAAI,SAAA6O,GAAG,MAAK,CACvBhC,IAAK,YACL9M,SAAU8O,EAAI9O,SACd+M,KAAMtH,IAAMC,eACVjD,IAAOkD,QACPlD,IAAOmD,WACPkJ,EAAI1O,SAGR,OA5DhB2E,KAAAgK,IAqEJd,EAAIlP,UAAY,CACdX,MAAOY,IAAUC,OAAOC,WACxBiE,YAAanE,IAAUC,OAAOC,WAC9BkB,KAAMpB,IAAUC,OAAOC,WACvB0K,KAAM5K,IAAUC,OAChBkH,YAAanH,IAAUgQ,MAAM,CAAC,UAAW,YACzC5I,SAAUpH,IAAUC,OACpBoH,SAAUrH,IAAUG,QAAQH,IAAUC,QACtCQ,aAAcT,IAAUG,QACtBH,IAAU2B,MAAM,CACdX,SAAUhB,IAAUC,OAAOC,WAC3BkB,KAAMpB,IAAUC,OAAOC,cAG3BgP,KAAMlP,IAAUG,QACdH,IAAU2B,MAAM,CACdgO,SAAU3P,IAAUC,OAAOC,WAC3BqH,QAASvH,IAAUC,OAAOC,eAKhC,IAAMiP,EAAY,aAWHF,IC3HftJ,EAAApD,EAAAqD,EAAA,sBAAAsB,uJCSM+I,EAAU,SAAA9Q,GAAA,IAAGE,EAAHF,EAAGE,KAAH,OACdG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMP,MACnBA,EACEoL,OAAO,SAACjC,EAAKrH,GAAN,OAAgBA,IAAU9B,EAAK8K,QAAQ3B,KAC9C3H,OACAI,IAAI,SAAAuH,GAAG,OACNhJ,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAIkF,IAAMC,eAAejD,IAAO2E,MAAMI,IAAKA,GAAMnH,IAAKmH,GACzD/E,IAAOpE,KAAKmJ,GAAKO,MAAQtC,IAAMoE,WAAWrC,QAMrDyH,EAAQlQ,UAAY,CAClBV,KAAMW,IAAUG,QAAQH,IAAUC,QAAQC,YAG7B+P,QC1BftK,EAAApD,EAAAqD,EAAA,sBAAA9F,yICUMoQ,EAAW,SAAA/Q,GAAA,IAAGoG,EAAHpG,EAAGoG,MAAH,OACf/F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMc,WACnB6E,EAAMtE,IAAI,SAAC4I,EAAM1I,GAAU,IAAAgP,EAC0BtG,EAAKnE,KAAKS,YAAtD/G,EADkB+Q,EAClB/Q,MAAOmB,EADW4P,EACX5P,KAAMa,EADK+O,EACL/O,KAAM/B,EADD8Q,EACC9Q,KAAaiB,GADd6P,EACO7Q,MADP6Q,EACc7P,SACxC,OACEd,EAAAC,EAAAC,cAAA,OAAK2B,IAAKjC,EAAOO,UAAWC,IAAMiK,MAUhCrK,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAM2H,SACpB/H,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAIkF,IAAMC,eAAetF,IAC5Bb,EAAOf,EAAAC,EAAAC,cAAA,aAAQa,GAAgB,KAChCf,EAAAC,EAAAC,cAAA,UAAKN,GACLI,EAAAC,EAAAC,cAAA,SAAIY,IAENd,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAST,KAAMA,UAQ3B6Q,EAASnQ,UAAY,CACnBwF,MAAOvF,IAAUG,QACfH,IAAU2B,MAAM,CACd+D,KAAM1F,IAAU2B,MAAM,CACpBwE,YAAanG,IAAU2B,MAAM,CAC3BvC,MAAOY,IAAUC,OAAOC,WACxBK,KAAMP,IAAUC,OAChBmB,KAAMpB,IAAUC,OAAOC,WACvBb,KAAMW,IAAUG,QAAQH,IAAUC,QAAQC,WAC1CZ,MAAOU,IAAU2B,MAAM,CACrB2E,gBAAiBtG,IAAU2B,MAAM,CAC/B4E,MAAOvG,IAAUI,OAAOF,aACvBA,aACFA,mBAOEgQ,QC3DfvK,EAAApD,EAAAqD,EAAA,sBAAAJ","file":"component---src-templates-post-post-js-a36fb666477797dc17cc.js","sourcesContent":["/* Vendor imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Img from \"gatsby-image\";\n/* App imports */\nimport TagList from \"../../../components/tag-list\";\nimport style from \"./heading.module.less\";\n\nconst Heading = ({ title, tags, cover, coverTitle }) => (\n  <div className={style.header}>\n    <div className={style.title}>\n      <h1>{title}</h1>\n      <TagList tags={tags} />\n    </div>\n    <div className={style.cover}>\n      {/* <Img fluid={cover} title={coverTitle} alt={title} /> */}\n    </div>\n  </div>\n);\n\nHeading.propTypes = {\n  title: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n  cover: PropTypes.object.isRequired,\n  coverTitle: PropTypes.string\n};\n\nexport default Heading;\n","/* Vendor imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport { FaRegCalendarAlt, FaRegClock } from \"react-icons/fa\";\nimport { MdTranslate } from \"react-icons/md\";\n/* App imports */\nimport style from \"./article-heading.module.less\";\n\nconst ArticleHeading = ({ excerpt, date, time, translations }) => (\n  <div className={style.container}>\n    <div className={style.excerpt}>\n      <p>{excerpt}</p>\n    </div>\n    <label>\n      <strong>\n        <FaRegCalendarAlt /> Date:{\" \"}\n      </strong>\n      <span>{date}</span>\n    </label>\n    <label>\n      <strong>\n        <FaRegClock /> Time to read:{\" \"}\n      </strong>\n      <span>{time}m</span>\n    </label>\n    {translations ? (\n      <label>\n        <strong>\n          <MdTranslate /> Translated in:{\" \"}\n        </strong>\n        {translations\n          .sort((translationA, translationB) =>\n            translationA.hreflang < translationB.hreflang ? -1 : 1\n          )\n          .map(({ hreflang, path }, index) => (\n            <span key={hreflang}>\n              <Link to={path}>{hreflangMap[hreflang]}</Link>\n              {index !== translations.length - 1 ? \", \" : null}\n            </span>\n          ))}\n      </label>\n    ) : null}\n  </div>\n);\n\nArticleHeading.propTypes = {\n  excerpt: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.number.isRequired,\n  translations: PropTypes.arrayOf(\n    PropTypes.shape({\n      hreflang: PropTypes.string.isRequired,\n      path: PropTypes.string.isRequired\n    })\n  )\n};\n\n// Languages code ISO 639-1 map\nconst hreflangMap = {\n  en: \"English\",\n  it: \"Italian\",\n  fr: \"French\"\n};\n\nexport default ArticleHeading;\n","/* Vendor imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"prismjs/themes/prism-solarizedlight.css\";\nimport \"./highlight-syntax.less\";\n/* App imports */\nimport style from \"./article.module.less\";\n\nconst Article = ({ html }) => (\n  <div className={style.container}>\n    <article dangerouslySetInnerHTML={{ __html: html }} />\n  </div>\n);\n\nArticle.propTypes = {\n  html: PropTypes.string.isRequired\n};\n\nexport default Article;\n","/* Vendor imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n/* App imports */\nimport Config from \"../../../../config\";\nimport style from \"./comments.module.less\";\n\nclass Comments extends React.Component {\n  componentDidMount() {\n    const { pageCanonicalUrl, pageId } = this.props;\n\n    if (window.DISQUS) {\n      window.DISQUS.reset({\n        reload: true,\n        config: function() {\n          this.page.url = pageCanonicalUrl;\n          this.page.identifier = pageId;\n        }\n      });\n    } else {\n      window.disqus_config = function() {\n        this.page.url = pageCanonicalUrl;\n        this.page.identifier = pageId;\n      };\n      (function() {\n        var d = document,\n          s = d.createElement(\"script\");\n        s.src = Config.disqusScript;\n        s.setAttribute(\"data-timestamp\", +new Date());\n        (d.head || d.body).appendChild(s);\n      })();\n    }\n  }\n\n  render = () => (\n    <div className={style.container}>\n      <div id=\"disqus_thread\" />\n    </div>\n  );\n}\n\nComments.propTypes = {\n  pageCanonicalUrl: PropTypes.string.isRequired,\n  pageId: PropTypes.string.isRequired\n};\n\nexport default Comments;\n","/* Vendor imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  FacebookShareButton,\n  TwitterShareButton,\n  LinkedinShareButton,\n  PinterestShareButton,\n  TumblrShareButton,\n  RedditShareButton,\n  WhatsappShareButton,\n  EmailShareButton\n} from \"react-share\";\nimport { IconContext } from \"react-icons\";\nimport {\n  FaFacebookSquare,\n  FaTwitterSquare,\n  FaLinkedin,\n  FaPinterestSquare,\n  FaTumblrSquare,\n  FaRedditSquare,\n  FaWhatsappSquare,\n  FaEnvelopeSquare\n} from \"react-icons/fa\";\nimport style from \"./share.module.less\";\n\nconst Share = ({ pageCanonicalUrl, title, description, tags, coverUrl }) => (\n  <div>\n    <IconContext.Provider value={{ className: style.icon }}>\n      <div className={style.container}>\n        <FacebookShareButton url={pageCanonicalUrl}>\n          <FaFacebookSquare color=\"#133783\" />\n        </FacebookShareButton>\n        <TwitterShareButton url={pageCanonicalUrl} title={title}>\n          <FaTwitterSquare color=\"#1da1f2\" />\n        </TwitterShareButton>\n        <LinkedinShareButton\n          url={pageCanonicalUrl}\n          title={title}\n          description={description}\n        >\n          <FaLinkedin color=\"#283e4a\" />\n        </LinkedinShareButton>\n        <PinterestShareButton\n          url={pageCanonicalUrl}\n          media={coverUrl}\n          description={description}\n        >\n          <FaPinterestSquare color=\"#e60023\" />\n        </PinterestShareButton>\n        <TumblrShareButton\n          url={pageCanonicalUrl}\n          title={title}\n          tags={tags}\n          caption={description}\n        >\n          <FaTumblrSquare color=\"#36465d\" />\n        </TumblrShareButton>\n        <RedditShareButton url={pageCanonicalUrl} title={title}>\n          <FaRedditSquare color=\"#ff4500\" />\n        </RedditShareButton>\n        <WhatsappShareButton\n          url={pageCanonicalUrl}\n          title={title}\n          separator=\" | \"\n        >\n          <FaWhatsappSquare color=\"#01e675\" />\n        </WhatsappShareButton>\n        <EmailShareButton url={pageCanonicalUrl} subject={title}>\n          <FaEnvelopeSquare color=\"#333333\" />\n        </EmailShareButton>\n      </div>\n    </IconContext.Provider>\n  </div>\n);\n\nShare.propTypes = {\n  pageCanonicalUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n  coverUrl: PropTypes.string.isRequired\n};\n\nexport default Share;\n","/* Vendor imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n/* App imports */\nimport PostList from \"../../../components/post-list\";\nimport style from \"./suggested-posts.module.less\";\n\nconst SuggestedPosts = ({ posts }) => (\n  <div>\n    <p className={style.title}>Did you like it? Why don't you try also...</p>\n    <PostList posts={posts} />\n  </div>\n);\n\nSuggestedPosts.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      edge: PropTypes.shape({\n        node: PropTypes.object\n      })\n    })\n  ).isRequired\n};\n\nexport default SuggestedPosts;\n","/* Vendor imports */\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\n/* App imports */\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\nimport Heading from \"./heading\";\nimport ArticleHeading from \"./article-heading\";\nimport Article from \"./article\";\nimport Comments from \"./comments\";\nimport Share from \"./share\";\nimport SuggestedPosts from \"./suggested-posts\";\nimport Config from \"../../../config\";\nimport Utils from \"../../utils\";\nimport style from \"./post.module.less\";\n\nconst Post = ({ data, pageContext }) => {\n  const { html, frontmatter, timeToRead } = data.markdownRemark;\n  const { title, date, tags, cover, path, excerpt } = frontmatter;\n  const translations =\n    pageContext.translations.length > 1 ? pageContext.translations : null;\n  const img = cover.childImageSharp.fluid;\n  const canonicalUrl = Utils.resolvePageUrl(\n    Config.siteUrl,\n    Config.pathPrefix,\n    path\n  );\n  const coverUrl = Utils.resolveUrl(Config.siteUrl, img.src);\n  const suggestedPosts = Utils.getSuggestedPosts(\n    data.markdownRemark,\n    data.allMarkdownRemark,\n    3\n  );\n\n  return (\n    <Layout>\n      <SEO\n        title={title}\n        description={excerpt}\n        path={path}\n        contentType=\"article\"\n        imageUrl={img.src}\n        keywords={tags}\n        translations={translations}\n      />\n      <div className={style.container}>\n        <Heading title={title} tags={tags} cover={img} coverTitle={excerpt} />\n        <div className={style.content}>\n          <ArticleHeading\n            excerpt={excerpt}\n            date={date}\n            time={timeToRead}\n            translations={translations}\n          />\n          <Article html={html} />\n          <Share\n            pageCanonicalUrl={canonicalUrl}\n            title={title}\n            description={excerpt}\n            tags={tags}\n            coverUrl={coverUrl}\n          />\n        </div>\n        <SuggestedPosts posts={suggestedPosts} />\n        <Comments pageCanonicalUrl={canonicalUrl} pageId={title} />\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($postPath: String!) {\n    markdownRemark(frontmatter: { path: { eq: $postPath } }) {\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"DD MMM YYYY\")\n        tags\n        path\n        excerpt\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { path: { ne: $postPath } }\n        fileAbsolutePath: { regex: \"/index.md$/\" }\n      }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            tags\n            excerpt\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default Post;\n","\nmodule.exports = {\n  pathPrefix: '/trixeg',\n  siteUrl: 'https://ahmedaabouzied.github.io',\n  siteTitle: 'Trixeg',\n  siteDescription: 'Software Developer Blog',\n  author: 'Ahmed Abouzied',\n  postsForArchivePage: 3,\n  defaultLanguage: 'en',\n  disqusScript: 'https://ahmedaabouzied.github.com/embed.js',\n  pages: {\n    home: '/',\n    blog: 'blog',\n    about: 'about',\n    tag: 'tag',\n    archive: 'archive'\n  },\n  social: {\n    github: 'https://github.com/ahmedaabouzied',\n    linkedin: '',\n    rss: '/rss.xml'\n  },\n  tags: {\n    go: {\n      name: 'Golang', \n      description: 'Go Programming Language.'\n    }\n  }\n}","const Config = require(\"../config\");\n\nconst Utils = {\n  /**\n   * Join provided url paths.\n   * @param {...string} paths Provided paths. It doesn't matter if they have trailing slash.\n   * @return {string} Resolved url without trailing slash.\n   */\n  resolveUrl: (...paths) => {\n    return paths.reduce((resolvedUrl, path) => {\n      let urlPath = path.toString().trim();\n      if (urlPath)\n        resolvedUrl +=\n          (resolvedUrl === \"\" ? \"\" : \"/\") + urlPath.replace(/^\\/|\\/$/g, \"\");\n      return resolvedUrl;\n    }, \"\");\n  },\n  /**\n   * Resolve a page url adding a trailing slash.\n   * Needed to prevent 301 redirects cause of Gatsby.js' folder structure.\n   * @param {...string} path Provided paths. It doesn't matter if they have trailing slash.\n   * @return {string} Resolved url with trailing slash.\n   */\n  resolvePageUrl: (...path) => {\n    let resolvedUrl = Utils.resolveUrl(...path);\n    return resolvedUrl + \"/\";\n  },\n  /**\n   * Get an ordered list of suggested posts for a single post.\n   * @param {Object} post The single post of which to find the related posts. It's the returned object from Graphql's query `markdownRemark`\n   * @param {Array} postList The list where find related posts. It's the returned object from Graphql's query `allMarkdownRemark`\n   * @param {number} limit The maximum number of suggested posts to get\n   * @return {Array} The `postList` object sorted according to the best match with the `post` object\n   */\n  getSuggestedPosts: (post, postList, limit) => {\n    // Get the number of common tags with provided post.\n    let getTagScore = edge => {\n      let commonTags = 0;\n      edge.node.frontmatter.tags.forEach(tag => {\n        commonTags += post.frontmatter.tags.indexOf(tag) !== -1 ? 1 : 0;\n      });\n      return commonTags;\n    };\n\n    return postList.edges\n      .sort((edgeA, edgeB) => {\n        return getTagScore(edgeB) - getTagScore(edgeA);\n      })\n      .slice(0, limit);\n  },\n  /**\n   * Pass a post and retrieve a list of related translations.\n   * @param {Object} post The post of which retrieve its translations. It accepts a `node` object from Graphql's query `allMarkdownRemark`\n   * @param {Object} postList The list of posts where search translations. It accepts a `edges` array from Graphql's query `allMarkdownRemark`\n   * @return {Object} An array of objects with languages as keys (ISO 639-1) and translated post's paths as values.\n   */\n  getRelatedTranslations: (post, postList) => {\n    return postList\n      .filter(({ node }) => {\n        // Get posts in the same folder of provided post\n        return (\n          node.fileAbsolutePath.split(\"/\").slice(-2, -1)[0] ===\n          post.fileAbsolutePath.split(\"/\").slice(-2, -1)[0]\n        );\n      })\n      .map(({ node }) => {\n        let lang = node.fileAbsolutePath.split(\".\").slice(-2, -1)[0];\n        return {\n          hreflang: lang.slice(-5) !== \"index\" ? lang : Config.defaultLanguage,\n          path: Utils.resolvePageUrl(node.frontmatter.path)\n        };\n      });\n  },\n  /**\n   * Capitalize passed string\n   * @param {string} str string to capitalize\n   * @return {string} string with first letter to uppercase\n   */\n  capitalize: str => str[0].toUpperCase() + str.slice(1)\n};\n\nmodule.exports = Utils;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/* Vendor imports */\nimport React, { Component } from \"react\";\nimport { Link } from \"gatsby\";\nimport { FaBars, FaTimes, FaGithub, FaLinkedin, FaRss } from \"react-icons/fa\";\n/* App imports */\nimport style from \"./header.module.less\";\nimport Config from \"../../../../config\";\nimport Utils from \"../../../utils\";\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lastScrollY: 0,\n      fixedHeader: false,\n      collapsedMenu: true\n    };\n    this.toggleFixedHeader = this.toggleFixedHeader.bind(this);\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.toggleFixedHeader);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.toggleFixedHeader);\n  }\n\n  toggleFixedHeader() {\n    if (!this.toggleFixedHeader.animationInProgress) {\n      this.toggleFixedHeader.animationInProgress = true;\n      setTimeout(() => {\n        this.setState(\n          {\n            lastScrollY: window.scrollY,\n            fixedHeader:\n              window.scrollY > 100 && this.state.lastScrollY < window.scrollY\n          },\n          () => (this.toggleFixedHeader.animationInProgress = false)\n        );\n      }, 200);\n    }\n  }\n\n  toggleMenu() {\n    this.setState({\n      collapsedMenu: !this.state.collapsedMenu\n    });\n  }\n\n  render = () => (\n    <div\n      className={style.container}\n      style={this.state.fixedHeader ? { backgroundImage: \"none\" } : null}\n    >\n      <div className={style.titleContainer}>\n        <div className={style.title}>\n          <Link to={Utils.resolvePageUrl(Config.pages.home)}>\n            <h4>{Config.siteTitle}</h4>\n            <p\n              className={\n                this.state.fixedHeader\n                  ? style.hiddenDescription\n                  : style.visibleDescription\n              }\n            >\n              {Config.siteDescription}\n            </p>\n          </Link>\n        </div>\n        <div className={style.menuButton}>\n          {this.state.collapsedMenu ? (\n            <FaBars size=\"30\" onClick={this.toggleMenu} />\n          ) : (\n            <FaTimes size=\"30\" onClick={this.toggleMenu} />\n          )}\n        </div>\n      </div>\n      <div\n        className={[\n          style.list,\n          this.state.collapsedMenu ? style.collapsedMenu : style.expandedMenu\n        ].join(\" \")}\n      >\n        <ul>\n          <li>\n            <Link to={Utils.resolvePageUrl(Config.pages.home)}>Home</Link>\n          </li>\n          <li>\n            <Link to={Utils.resolvePageUrl(Config.pages.tag)}>Tags</Link>\n          </li>\n          <li>\n            <Link to={Utils.resolvePageUrl(Config.pages.about)}>About</Link>\n          </li>\n        </ul>\n        <ul>\n          <li>\n            <a\n              target=\"_blank\"\n              rel=\"nofollow noopener noreferrer\"\n              href={Config.social.github}\n            >\n              <FaGithub size=\"30\" />\n            </a>\n          </li>\n          <li>\n            <a\n              target=\"_blank\"\n              rel=\"nofollow noopener noreferrer\"\n              href={Config.social.linkedin}\n            >\n              <FaLinkedin size=\"30\" />\n            </a>\n          </li>\n          <li>\n            <Link to={Utils.resolveUrl(Config.social.rss)}>\n              <FaRss size=\"30\" />\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","/* Vendor imports */\nimport React from \"react\";\n/* App imports */\nimport style from \"./footer.module.less\";\n\nconst Footer = () => (\n  <div className={style.container}>\n    <p>Copyrights &copy; Trixeg Blog 2019</p>\n  </div>\n);\n\nexport default Footer;\n","/* Vendor imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n/* App imports */\nimport Header from \"./header\";\nimport Footer from \"./footer\";\nimport \"../../style/global.less\";\nimport style from \"./layout.module.less\";\n\nconst Layout = ({ children, title }) => (\n  <>\n    <Header />\n    <div className={style.container}>\n      {title ? (\n        <div className={style.title}>\n          <h1>{title}</h1>\n        </div>\n      ) : null}\n      {children}\n    </div>\n    <Footer />\n  </>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nLayout.defaultProps = {\n  title: \"\"\n};\n\nexport default Layout;\n","export { default } from \"./layout\";\n","/* Vendor imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n/* App imports */\nimport Config from \"../../../config\";\nimport Utils from \"../../utils\";\n\nfunction SEO({\n  title,\n  description,\n  path,\n  lang,\n  keywords,\n  contentType,\n  imageUrl,\n  translations,\n  meta\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaKeywords =\n          keywords && keywords.length > 0\n            ? { name: \"keywords\", content: keywords.join(\", \") }\n            : [];\n        const pageUrl = Utils.resolvePageUrl(\n          Config.siteUrl,\n          Config.pathPrefix,\n          path\n        );\n        const metaImageUrl = Utils.resolveUrl(\n          Config.siteUrl,\n          imageUrl ? imageUrl : data.file.childImageSharp.fixed.src\n        );\n\n        return (\n          <Helmet\n            title={title} // Page title\n            titleTemplate={`%s | ${Config.siteTitle}`}\n            meta={\n              [\n                { name: \"description\", content: description }, // Page description\n                /* Open Graph */\n                { property: \"og:title\", content: title },\n                { property: \"og:type\", content: contentType || \"website\" },\n                { property: \"og:url\", content: pageUrl },\n                { property: \"og:description\", content: description },\n                { property: \"og:image\", content: metaImageUrl },\n                { property: \"og:image:alt\", content: description },\n                { property: \"og:site_name\", content: Config.siteTitle },\n                { property: \"og:locale\", content: lang || \"en_US\" },\n                /* Twitter card */\n                { name: \"twitter:card\", content: \"summary_large_image\" },\n                { name: \"twitter:title\", content: title },\n                { name: \"twitter:description\", content: description },\n                { name: \"twitter:image\", content: metaImageUrl },\n                { name: \"twitter:image:alt\", content: description },\n                { name: \"twitter:site\", content: Config.author },\n                { name: \"twitter:creator\", content: Config.author }\n              ]\n                .concat(metaKeywords) // Keywords\n                .concat(meta || []) // Other provided metadata\n            }\n            link={[\n              { rel: \"canonical\", href: pageUrl } // Canonical url\n            ]\n              // Translated versions of page\n              .concat(\n                translations\n                  ? translations.map(obj => ({\n                      rel: \"alternate\",\n                      hreflang: obj.hreflang,\n                      href: Utils.resolvePageUrl(\n                        Config.siteUrl,\n                        Config.pathPrefix,\n                        obj.path\n                      )\n                    }))\n                  : []\n              )}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  lang: PropTypes.string,\n  contentType: PropTypes.oneOf([\"article\", \"website\"]),\n  imageUrl: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  translations: PropTypes.arrayOf(\n    PropTypes.shape({\n      hreflang: PropTypes.string.isRequired,\n      path: PropTypes.string.isRequired\n    })\n  ),\n  meta: PropTypes.arrayOf(\n    PropTypes.shape({\n      property: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired\n    })\n  )\n};\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    file(name: { eq: \"facebook-logo\" }) {\n      childImageSharp {\n        fixed(width: 500) {\n          ...GatsbyImageSharpFixed_noBase64\n        }\n      }\n    }\n  }\n`;\nexport default SEO;\n","export { default } from \"./seo\";\n","/* Vendor imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n/* App imports */\nimport style from \"./tag-list.module.less\";\nimport Config from \"../../../config\";\nimport Utils from \"../../utils\";\n\nconst TagList = ({ tags }) => (\n  <div className={style.tags}>\n    {tags\n      .filter((tag, index) => index === tags.indexOf(tag)) // Remove duplicate values\n      .sort()\n      .map(tag => (\n        <Link to={Utils.resolvePageUrl(Config.pages.tag, tag)} key={tag}>\n          {Config.tags[tag].name || Utils.capitalize(tag)}\n        </Link>\n      ))}\n  </div>\n);\n\nTagList.propTypes = {\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default TagList;\n","export { default } from \"./tag-list\";\n","/* Vendor imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\n/* App imports */\nimport style from \"./post-list.module.less\";\nimport TagList from \"../tag-list\";\nimport Utils from \"../../utils\";\n\nconst PostList = ({ posts }) => (\n  <div className={style.container}>\n    {posts.map((post, index) => {\n      const { title, date, path, tags, cover, excerpt } = post.node.frontmatter;\n      return (\n        <div key={title} className={style.post}>\n          {/* <div className={style.cover}>\n            <Link to={Utils.resolvePageUrl(path)}>\n              <Img\n                fluid={cover.childImageSharp.fluid}\n                title={excerpt}\n                alt={title}\n              />\n            </Link>\n          </div> */}\n          <div className={style.content}>\n            <Link to={Utils.resolvePageUrl(path)}>\n              {date ? <label>{date}</label> : null}\n              <h2>{title}</h2>\n              <p>{excerpt}</p>\n            </Link>\n            <TagList tags={tags} />\n          </div>\n        </div>\n      );\n    })}\n  </div>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        frontmatter: PropTypes.shape({\n          title: PropTypes.string.isRequired,\n          date: PropTypes.string,\n          path: PropTypes.string.isRequired,\n          tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n          cover: PropTypes.shape({\n            childImageSharp: PropTypes.shape({\n              fluid: PropTypes.object.isRequired\n            }).isRequired\n          }).isRequired\n        })\n      })\n    })\n  )\n};\n\nexport default PostList;\n","export { default } from \"./post-list\";\n"],"sourceRoot":""}